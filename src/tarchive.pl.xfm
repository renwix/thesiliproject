<: #-*- perl -*-

# gpl
# 
#  Author: Renwix (renwix@gmail.com)
#  Maintainer: Renwix
#  Copyright (C) 2008 Renwix, all rights reserved.
#  Created: Tue Sep 23 23:52:17 MDT 2008
# 
# 
#=======================================================================
# 
# This file is part of theSiliProject, a humorous software organization,
# design and development toolkit.
# 
# theSiliProject is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# theSiliProject is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with theSiliProject. If not, see <http://www.gnu.org/licenses/>.
# 
#=======================================================================
# 
# /gpl

# $xfmpipe = [{ command => 'pp.pl', chmod => '+x' }]
use Helpers::PerlScript;

my $ps = Helpers::PerlScript->new( name => 'tarchive.pl' ,
                                   description => 'A wrapper around the Template::SimpleTextArchive library',
                                   include => ['Template::SimpleTextArchive'],
                                   suppressRequiredVariableCheck => 't',
                                   getopts => [{ tag => 'create',
                                                 variable => '$create',
                                                 description => 'Set this commandline flag to create a new archive',
                                             },
                                               { tag => 'x|extract',
                                                 variable => '$extract' ,
                                                 description => 'Set this commandline flag to extract an existing archive',
                                             },
                                               { tag => 'rootDirectory:s',
                                                 variable => '$root',
                                                 required => 't',
                                                 description => 'The root directory that the archive file should created from/extracted to' },
                                               { tag => 'f|archiveFile:s',
                                                 variable => '$file',
                                                 required => 't',
                                                 description => 'The archive file' },
                                               { tag => 'useXfmpipeHeader',
                                                 variable => '$xfmpipeHeader',
                                                 description => 'Set this to include a "safe" xfmpipe header in the generated template file. This is for convenience only.' },
                                               { tag => 'verbose+',
                                                 variable => '$verbose',
                                                 description => 'Turn on verbose output' }],
                                   );
print $ps->dump(); print $ps->pod();
:>
 
print_usage() unless $root && $file && ($create || $extract);

my $t = Template::SimpleTextArchive->new(rootDirectory => $root,
                                         archiveFile => $file,
                                         debug => $debug,
                                         defaultXfmpipeHeader => $xfmpipeHeader,
                                         verbose => $verbose);
if ($create) {
    $t->create();
} elsif ($extract) {
    $t->extract();
}

cleanup 0; # "archive file created in $file";
