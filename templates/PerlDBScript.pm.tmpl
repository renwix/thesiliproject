<@ # -*-perl-*-

# gpl
# 
#  Author: Renwix (renwix@gmail.com)
#  Maintainer: Renwix
#  Copyright (C) 2008 Renwix, all rights reserved.
#  Created: Tue Sep 23 23:52:17 MDT 2008
# 
# 
#=======================================================================
# 
# This file is part of theSiliProject, a humorous software organization,
# design and development toolkit.
# 
# theSiliProject is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# theSiliProject is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with theSiliProject. If not, see <http://www.gnu.org/licenses/>.
# 
#=======================================================================
# 
# /gpl

# $xfmpipe = [{command => "pp.pl  -s '<@' -e '@>'" , }] -*-xml-*-
# <templateDefinition> my $tmp = $outputName; $tmp =~ s/\.pm.+$//; $ENV{script} = $tmp; </templateDefinition>
use Env;
@><: #-*- perl -*-
# $xfmpipe = [{ command => pp, chmod => '+x' }]
use Helpers::PerlScript;

my $ps = Helpers::PerlScript->new( name => '<@= $script @>.pl' , 
                                   description => q[],
                                   include => ['DB::OracleHandle',
                                               'DB::RowSet'],
#                                   suppressRequiredVariableCheck => 't',
                                   getopts => [
                                               { tag => 'user:s',
                                                 variable => '$user',
                                                 default => '$ENV{DB_USER}',
                                                 description => 'db user'},
                                               { tag => 'host:s',
                                                 variable => '$host',
                                                 default => '$ENV{DB_HOST}',
                                                 description => 'db machine'},
                                               { tag => 'passwd:s',
                                                 variable => '$passwd',
                                                 default => '$ENV{DB_PASSWD}',
                                                 description => 'db passwd'},
                                               { tag => 'sid:s',
                                                 variable => '$sid',
                                                 default => '$ENV{DB_SID}',
                                                 description => 'db sid'},
                                               { tag => 'port:s',
                                                 variable => '$port',
                                                 default => '$ENV{DB_PORT}',
                                                 description => 'db port'},
                                               ],
                                   );
print $ps->dump(); print $ps->pod();
:>
my $dbhandle = DB::OracleHandle->new(user => "$user",
				     password => "$passwd",
				     SID => "$sid",
				     host => "$host",
				     port => "$port");

#
# If you need a rowset object, then do this
# 
my $rowset = DB::RowSet->new(dbh => $dbhandle->getDbh(),
			     sql => "select 1 from dual",
			     verbose => $debug);

while ($rowset->next()) {
    my $value = $rowset->item('FIELDNAME');
}


#
# If you just need to run a query and don't 
# need to access the results, then do this:
#
$dbhandle->execute( sql => $sql, verbose => $debug );


cleanup 0; 
