# Function:	lock3    -*-sh-*-
#
# Description:	takes a directory as an arguments.  Checks for a pid file in
#               that directory.  If a process exists with that pid and has the
#               same name as this process, exit with an error.
#
#               This logic will fail only if another process of the same name
#               has taken the pid in the file.
#
# Usage:        lock3 PIDDIR ProgramName PidFileName

lock () {
  test $# -lt 2 &&
    cleanup 1 illegal arguments to the lock\(\) function

  test $DEBUG && set -x
  local MKDIR=${MKDIR:-mkdir}
  local UNAME=$(uname)
  local PS=/bin/ps
  local PIDDIR=$1
  local PIDFILE=${PIDDIR/$3.pid:-$PIDDIR/`basename $2 .sh`.pid}
  if test ! -d $PIDDIR; then
    docmd $MKDIR -p $PIDDIR
    docmdq 'echo $$ > $PIDFILE'
    return 0
  fi
  if test -a $PIDFILE; then
    local pid=$(cat $PIDFILE)
    if test $pid; then
      local pout=$($PS -f -p $pid 2> /dev/null) 
      if test $? -ne 0; then
        docmdq 'echo $$ > $PIDFILE'
        return 0
      fi
      local process=$(echo ${pout} | tail -1)
      local match=$(echo "$process" | grep $2 )
      if test $match; then
        if test -z "$QUIET"; then
          cleanup 1 a copy of this process is running - pid is ${pid}
        else
          exit 1
        fi
      fi
    fi
  fi
  docmdq 'echo $$ > $PIDFILE'
}
